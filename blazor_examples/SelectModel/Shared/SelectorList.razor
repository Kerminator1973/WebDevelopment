@using Microsoft.Fast.Components.FluentUI
@inject IJSRuntime JSRuntime

<FluentSelect Items=@Items
            OptionText="@(i => i.Text)"
            OptionValue="@(i => i.Value)"
            OptionSelected="@(i => i.Selected)"
            @ref="fluentSelect"
            @onchange="OnSelectionChanged" />

<script>
    // Функция устанавливает фокус на указанный орган управления и раскрывает
    // выпадающий список
    window.setFocusOnChildInput = (id) => {
        const dropdown = document.getElementById(id);
        dropdown.focus();

        console.dir(dropdown);
        //element.showPopup();
    }
</script>

@code {

    // Текстовое сообщение, отображаемое в списке выбора, если список пустой
    [Parameter]
    public string? DefaultItem { get; set; }

    // Список отображаемых в списке элементов
    [Parameter]
    public List<Option<string>> Items { get; set; } = new();

    // Событие - выбран элемент списка
    [Parameter]
    public EventCallback<string> SelectEvent { get; set; }

    //
    private FluentSelect<Option<string>>? fluentSelect;

    protected override void OnInitialized()
    {
        // После того, как орган управления создан, если не был указан список
        // добавляемых элементов, отображаем единственный доступный элемент
        if (!String.IsNullOrEmpty(DefaultItem) && Items.Count == 0)
        {
            Items.Add(new Option<string> { Value = "0", Text = DefaultItem });
        }
    }

    public void ReplaceItems(List<Option<string>> newItems)
    {
        Items.Clear();
        Items.AddRange(newItems);
        StateHasChanged();
    }

    public void SetFocus()
    {
        if (fluentSelect != null)
        {
            JSRuntime.InvokeVoidAsync("setFocusOnChildInput", fluentSelect.Id).GetAwaiter().GetResult();

            //fluentSelect.Element.FocusAsync().GetAwaiter().GetResult();
            //fluentSelect.Open = true;
            //StateHasChanged();
        }
    }

    private void OnSelectionChanged(ChangeEventArgs e)
    {
        // Передаём родительскому элементу информацию о выбранном элементе списка
        if (e?.Value != null) {
            SelectEvent.InvokeAsync(e.Value.ToString());
        }
    }
}
